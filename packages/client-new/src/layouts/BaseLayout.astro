---
import Sidebar from "../components/Sidebar.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";

import "@fontsource-variable/montserrat";
import "@fontsource-variable/open-sans";

interface Props {
  title?: string;
  admin?: boolean;
}

const { title, admin = false } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <title>{title ? `F1 Race Panel - ${title}` : "F1 Race Panel"}</title>
  </head>
  <body>
    <Sidebar admin={admin} />
    <Navbar admin={admin} />
    <main>
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style is:global lang="scss">
  @use "../styles/themes";
  @use "../styles/variables" as *;

  :root {
    --widget-bg-light: #fff;
    --widget-box-shadow: 0 1px 8px rgba(110, 110, 110, 0.1);
  }

  /* This solution will check if any element has the theme attribute, if it
     does then it will ignore the prefers-color-scheme media query. This
     enables us to set the theme attribute to any element and control the
     theme using CSS variables. */
  @media (prefers-color-scheme: light) {
    :root:not([theme]) {
      @include themes.light-theme;
    }
  }

  @media (prefers-color-scheme: dark) {
    :root:not([theme]) {
      @include themes.dark-theme;
    }
  }

  html[theme="light"] {
    @include themes.light-theme;
  }

  html[theme="dark"] {
    @include themes.dark-theme;
  }

  html {
    background-color: var(--theme-body);
    color: var(--theme-header);

    font-family: "Open Sans Variable", "Montserrat Variable", sans-serif;
  }

  body {
    margin: $page-margin;
    min-height: calc(100vh - 2 * $page-y-margin);

    display: grid;
    grid-template-areas:
      "navbar"
      "main"
      "footer";
    grid-template-rows: auto 1fr auto;
  }

  nav {
    grid-area: navbar;
  }

  main {
    grid-area: main;
  }

  footer {
    grid-area: footer;
  }

  button {
    all: unset;
    cursor: pointer;
  }

  button:focus {
    outline: #000 5px solid;
  }

  .nav-open {
    overflow: hidden;
  }

  a {
    text-decoration: none;
  }

  a:visited {
    color: unset;
  }
</style>
