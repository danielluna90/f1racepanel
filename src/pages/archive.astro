---
import Card from "../components/Card.astro";
import ArchiveCard from "../components/cards/ArchiveCard.astro";
import BaseLayout from "../layouts/BaseLayout.astro";

import { CollectionEntry, getCollection } from "astro:content";

const gpEntries = await getCollection("gpData");
const gpByYear: Map<string, CollectionEntry<"gpData">[]> = new Map();

gpEntries.forEach((gpEntry) => {
  const [year, _] = gpEntry.id.split("/");

  if (!gpByYear.get(year)) gpByYear.set(year, [gpEntry]);
  else gpByYear.get(year)!.push(gpEntry);
});
---

<BaseLayout title="Archive">
  <h1>Race Archive</h1>
  {
    Array.from(gpByYear).map(([year, races]) => {
      return (
        <>
          <details>
            <summary>
              <Card>
                <h2 class="year-heading">{year}</h2>
              </Card>
            </summary>
            <div class="gp-container">
              {races.map((race) => {
                return <ArchiveCard race={race} />;
              })}
            </div>
          </details>
        </>
      );
    })
  }
</BaseLayout>

<style>
  .gp-container {
    display: grid;

    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));

    gap: 1rem;
  }

  summary {
    list-style-type: none;
  }

  summary:hover {
    cursor: pointer;
  }

  .year-heading {
    text-align: center;
  }

  details[open]:not(:last-child),
  summary:not(:last-child) {
    padding-bottom: 2rem;
  }
</style>
